{"version":3,"sources":["components/Console/Console.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","terminal","width","padding","backgroundColor","marginBottom","spacing","borderRadius","commandInput","display","justifyContent","commandTextField","sendButton","margin","red","termOptions","fontSize","fontFamily","foreground","background","cursor","black","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","Console","fitAddon","FitAddon","classes","termRef","React","token","setToken","tokenDialogOpen","setTokenDialogOpen","tokenInputValue","setTokenInputValue","connOpen","setConnOpen","commandInputValue","setCommandInputValue","webSocketOnMessage","data","res","JSON","parse","type","msg","current","writeln","connect","clear","Promise","resolve","axios","get","then","content","forEach","value","log","catch","err","response","status","getManagerLog","window","websocketConn","WebSocket","location","host","onclose","onmessage","onopen","send","stringify","fit","ref","className","addons","options","TextField","label","variant","onChange","e","target","Button","color","onClick","cmd","close","Dialog","open","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","autoFocus","fullWidth","DialogActions","root","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","hide","flexShrink","drawerPaper","drawerHeader","alignItems","mixins","toolbar","flexGrow","contentShift","easeOut","App","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","anchor","paper","Divider","List","ListItem","button","key","ListItemIcon","ListItemText","primary","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0538bf54.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { XTerm } from 'xterm-for-react'\r\nimport { FitAddon } from 'xterm-addon-fit'\r\nimport { ITerminalOptions, ITheme } from 'xterm'\r\nimport axios from 'axios'\r\n\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\n\r\nimport { Response, WebSocketResponse } from '../../API/response'\r\nimport { Log } from '../../API/log'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    websocketConn: WebSocket | null\r\n  }\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    terminal: {\r\n      width: '100%',\r\n      padding: 12,\r\n      backgroundColor: '#2b2b2b',\r\n      marginBottom: theme.spacing(2),\r\n      borderRadius: 4,\r\n    },\r\n    commandInput: {\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n    },\r\n    commandTextField: {\r\n      width: '85vw',\r\n    },\r\n    sendButton: {\r\n      margin: 8,\r\n    },\r\n  })\r\n)\r\n\r\nconst red = '\\x1B[1;3;31m'\r\nconst end = '\\x1B[0m'\r\n\r\nconst termOptions = {\r\n  fontSize: 16,\r\n  fontFamily:\r\n    'Menlo For Powerline,Consolas,Liberation Mono,Menlo,Courier,monospace',\r\n  theme: {\r\n    foreground: '#d2d2d2',\r\n    background: '#2b2b2b',\r\n    cursor: '#adadad',\r\n    black: '#000000',\r\n    red: '#d81e00',\r\n    green: '#5ea702',\r\n    yellow: '#cfae00',\r\n    blue: '#427ab3',\r\n    magenta: '#89658e',\r\n    cyan: '#00a7aa',\r\n    white: '#dbded8',\r\n    brightBlack: '#686a66',\r\n    brightRed: '#f54235',\r\n    brightGreen: '#99e343',\r\n    brightYellow: '#fdeb61',\r\n    brightBlue: '#84b0d8',\r\n    brightMagenta: '#bc94b7',\r\n    brightCyan: '#37e6e8',\r\n    brightWhite: '#f1f1f0',\r\n  } as ITheme,\r\n} as ITerminalOptions\r\n\r\nconst Console: React.FC = () => {\r\n  const fitAddon = new FitAddon()\r\n  const classes = useStyles()\r\n  const termRef = React.useRef<XTerm>(null)\r\n  const [token, setToken] = React.useState('')\r\n  const [tokenDialogOpen, setTokenDialogOpen] = React.useState(false)\r\n  const [tokenInputValue, setTokenInputValue] = React.useState('')\r\n  const [connOpen, setConnOpen] = React.useState(false)\r\n  const [commandInputValue, setCommandInputValue] = React.useState('')\r\n\r\n  const getManagerLog = (token: string) => {\r\n    return new Promise(resolve => {\r\n      axios\r\n        .get<Response<Log[]>>(`/api/log/all?token=${token}`)\r\n        .then(res => {\r\n          res.data.content.forEach(value =>\r\n            termRef.current?.terminal.writeln(\r\n              `${red}${value.type}: ${end}${value.log}`\r\n            )\r\n          )\r\n          resolve()\r\n        })\r\n        .catch(err => {\r\n          termRef.current?.terminal.writeln('Connection failed')\r\n          if (err.response.status === 401) {\r\n            termRef.current?.terminal.writeln(err.response.data.msg)\r\n            termRef.current?.terminal.writeln('Please enter token.')\r\n            setTokenDialogOpen(true)\r\n          } else {\r\n            termRef.current?.terminal.writeln('Connection lost.')\r\n            termRef.current?.terminal.writeln(\r\n              'Unknown error:' + err.response.data.msg + err.response.status\r\n            )\r\n            termRef.current?.terminal.writeln('Please contact the developer.')\r\n          }\r\n        })\r\n    })\r\n  }\r\n\r\n  const webSocketOnMessage = (data: any) => {\r\n    const res: WebSocketResponse = JSON.parse(data.data)\r\n    switch (res.type) {\r\n      case 'auth':\r\n        if (res.msg === 'OK') {\r\n          termRef.current?.terminal.writeln('Connection succeeded.')\r\n        } else {\r\n          termRef.current?.terminal.writeln(res.msg)\r\n          termRef.current?.terminal.writeln('Please enter token.')\r\n          setTokenDialogOpen(true)\r\n        }\r\n        break\r\n      case 'cmd_in':\r\n        termRef.current?.terminal.writeln(`${red}${res.type}: ${end}${res.msg}`)\r\n        break\r\n      case 'bds':\r\n        termRef.current?.terminal.writeln(`${red}${res.type}: ${end}${res.msg}`)\r\n        break\r\n    }\r\n  }\r\n\r\n  const connect = React.useCallback((token: string) => {\r\n    termRef.current?.terminal.clear()\r\n    termRef.current?.terminal.writeln('Connecting to PoiManager...')\r\n    getManagerLog(token).then(() => {\r\n      window.websocketConn = new WebSocket(\r\n        `ws://${window.location.host}/api/ws/cmd`\r\n      )\r\n      setConnOpen(true)\r\n      window.websocketConn.onclose = () => {\r\n        setConnOpen(false)\r\n        termRef.current?.terminal.writeln('Connection lost.')\r\n      }\r\n      window.websocketConn.onmessage = webSocketOnMessage\r\n      window.websocketConn.onopen = () => {\r\n        window.websocketConn?.send(JSON.stringify({ token }))\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const sendCommand = () => {\r\n    window.websocketConn?.send(\r\n      JSON.stringify({ token, cmd: commandInputValue })\r\n    )\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    fitAddon.fit()\r\n  }, [fitAddon])\r\n\r\n  React.useEffect(() => {\r\n    connect(token)\r\n  }, [connect, token])\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <XTerm\r\n          ref={termRef}\r\n          className={classes.terminal}\r\n          addons={[fitAddon]}\r\n          options={termOptions}\r\n        />\r\n        <div className={classes.commandInput}>\r\n          <TextField\r\n            label='在此输入指令'\r\n            variant='outlined'\r\n            className={classes.commandTextField}\r\n            value={commandInputValue}\r\n            onChange={e => setCommandInputValue(e.target.value)}\r\n          />\r\n          <Button\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.sendButton}\r\n            onClick={sendCommand}>\r\n            执行\r\n          </Button>\r\n\r\n          {connOpen ? (\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.sendButton}\r\n              onClick={() => {\r\n                window.websocketConn?.close()\r\n                setConnOpen(false)\r\n              }}>\r\n              中断\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.sendButton}\r\n              onClick={() => {\r\n                connect(token)\r\n              }}>\r\n              连接\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <Dialog open={tokenDialogOpen} aria-labelledby='form-dialog-title'>\r\n        <DialogTitle id='form-dialog-title'>请输入 Token</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            请您输入 Token ，在程序启动时能找到{' '}\r\n            <code> >Manager Token: xxxxxx</code>的字样，您输入\r\n            <code>Manager Token: </code>后的文本即可\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin='dense'\r\n            id='token'\r\n            label='Token'\r\n            type='text'\r\n            onChange={e => setTokenInputValue(e.target.value)}\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => {\r\n              setTokenDialogOpen(false)\r\n            }}\r\n            color='primary'>\r\n            取消\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setToken(tokenInputValue)\r\n              setTokenDialogOpen(false)\r\n            }}\r\n            color='primary'>\r\n            确定\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Console\r\n","import * as React from 'react'\r\nimport clsx from 'clsx'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\r\nimport DashboardIcon from '@material-ui/icons/Dashboard'\r\n\r\nimport Console from './components/Console/Console'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: 240,\r\n      width: `calc(100% - 240px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: 240,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: 240,\r\n    },\r\n    drawerHeader: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      padding: theme.spacing(0, 1),\r\n      // necessary for content to be below app bar\r\n      ...theme.mixins.toolbar,\r\n      justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      marginLeft: -240,\r\n    },\r\n    contentShift: {\r\n      transition: theme.transitions.create('margin', {\r\n        easing: theme.transitions.easing.easeOut,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      marginLeft: 0,\r\n    },\r\n  })\r\n)\r\n\r\nconst App: React.FC = () => {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position='fixed'\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={()=>setOpen(true)}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant='h6' noWrap>\r\n            PoiManager\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n       className={classes.drawer}\r\n       variant=\"persistent\"\r\n       anchor=\"left\"\r\n       open={open}\r\n       classes={{\r\n         paper: classes.drawerPaper,\r\n       }}\r\n        >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton\r\n            onClick={() => {\r\n              setOpen(false)\r\n            }}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button key='console'>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary='控制台' />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <Console />\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}